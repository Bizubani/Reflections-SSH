What happens when you initialize a repository? Why do you need to do it?

A .git folder is created that will manage the contents of the directory from
first commit onwards. It's neccesary to provide protection to my work.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is a temporary holding point for files in the working directory
that are being promoted to the repository. It gives a area to double check what is 
being commited before commiting.

How can you use the staging area to make sure you have one commit per logical
change?

Using git diff to compare the working directory to the staging area and also
git diff --staged to compare the staging area to the most recent commit, you
can ensure that the changes are added and commited in a thoughtful way.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

In cases where experimentation is necessary, it can be accomplished without
breaking the production code using a branch to test the feature(s). 

How do the diagrams help you visualize the branch structure?

It gives a pictoral view of the history of commits, making it easy to see 
where branches originated and trace the history of the project.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

When two branches are merged togehter, the result is that branch name of the
currently checked out branch is kept as the branch id. The commits for both 
branches are shown, chronologically. 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

