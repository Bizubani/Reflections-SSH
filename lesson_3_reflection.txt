When would you want to use a remote repository rather than keeping all your work local?

Whenever I want the security of having a remote backup or when I work/ or intend to 
work with multiple people.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Manually pulling changes down, would ensure that you have an oppotunity to vet changes before adding them to 
the local repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A clone is a second repository made by copying the first one. A fork is a clone made on the github
server, cloning an existing repository. A branch is an alternative path made in a repository to 
possibly test a new feature without affecting the main program.

What is the benefit of having a copy of the last known state of the remote stored locally?

It helps act as a guide. Instructing as to whether the two repositories are in the same
state, or which one is ahead of the other. It would be useful for short periods spent
offline. It can be thrown off however, when collaborating.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without the aid of github, collaboration would entail a lot of copying and pasting code via emails.
It would lack the beneficial tools such as git diff, meaning that the programmer would have to 
manually go through the documents and find the changes. It's a much simplier process to 
collaborate using the tools and resources provided by git and git hub. 
The only benefit to not using git is the time saved, not spent practicing and learning
git.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Making changes to a branch other than master is beneficial when working in a collaborative environment, or when
testing out and experimentary feature. When working in a group, working outside the master branch facilitates
the usage of pull requests. This allows the other group memebers to lookover changes before updating the remote master.
This also allows all the memebers to have access to the same master on all computers that are being used.
Working directly on the master branch is easier when you're a lone wolf programmer, like me, and aren't worried
about having to keep other people in the loop. 